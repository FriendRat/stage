<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>FriendRat</title><link>https://friendrat.com/</link><description>Recent content on FriendRat</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 10 Jan 2022 17:03:43 +0100</lastBuildDate><atom:link href="https://friendrat.com/index.xml" rel="self" type="application/rss+xml"/><item><title>Config Vim/NVim for Rust</title><link>https://friendrat.com/blog/2022-01-10-config-vim/nvim-for-rust/</link><pubDate>Mon, 10 Jan 2022 17:03:43 +0100</pubDate><guid>https://friendrat.com/blog/2022-01-10-config-vim/nvim-for-rust/</guid><description>We have several options to Configure VIM to support RustLang similar to IDEs. The easiest and quickest one is to use CocVim + Rust-Analyzer.
CocVim is: Make your Vim/Neovim as smart as VSCode. Rust-Analyzer is: rust-analyzer is a modular compiler frontend for the Rust language. It is a part of a larger rls-2.0 effort to create excellent IDE support for Rust.
In this post, I&amp;rsquo;m using ArchLinux, but these steps shouldn&amp;rsquo;t be much different in other distributions.</description></item></channel></rss>